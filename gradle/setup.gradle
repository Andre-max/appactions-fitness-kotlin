
/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/**
 * Change the package name references in the project in order to test the sample with the user
 * owned package name.
 *
 * i.e: ./gradlew :setupPackageName -PpackageName="com.my.sample"
 *
 * Also, to avoid the Firebase plugin to fail, you can disable firebase passing -PdisableFirebase
 * as parameter.
 */
task setupPackageName {
    doLast {
        if (project.hasProperty('packageName')) {
            ant.replaceregexp(
                    match: 'import com.devrel.android.fitactions.R',
                    replace: "import ${project.property('packageName')}.R",
                    flags: 'g',
                    byline: true
            ) {
                fileset(dir: 'app/src/main/java/com/devrel/android/fitactions', includes: '**/*.kt')
            }

            ant.replaceregexp(
                    match: 'import com.devrel.android.fitactions.BuildConfig',
                    replace: "import ${project.property('packageName')}.BuildConfig",
                    flags: 'g',
                    byline: true
            ) {
                fileset(dir: 'app/src/main/java/com/devrel/android/fitactions', includes: '**/*.kt')
            }

            ant.replaceregexp(
                    match: 'applicationId "com.devrel.android.fitactions"',
                    replace: "applicationId \"${project.property('packageName')}\"",
                    flags: 'g',
                    byline: true
            ) {
                fileset(dir: 'app', includes: 'build.gradle')
            }

            ant.replaceregexp(
                    match: 'package="com.devrel.android.fitactions"',
                    replace: "package=\"${project.property('packageName')}\"",
                    flags: 'g',
                    byline: true
            ) {
                fileset(dir: 'app/src/main', includes: 'AndroidManifest.xml')
            }

            ant.replaceregexp(
                    match: 'urlTemplate="content://com.devrel.android.fitactions.',
                    replace: "urlTemplate=\"content://${project.property('packageName')}.",
                    flags: 'g',
                    byline: true
            ) {
                fileset(dir: 'app/src/main/res/xml', includes: 'actions.xml')
            }

            if (project.hasProperty('disableFirebase')) {
                ant.replaceregexp(
                        match: 'FirebaseUserActions.getInstance()',
                        replace: "// FirebaseUserActions.getInstance()",
                        flags: 'g',
                        byline: true
                ) {
                    fileset(dir: 'app/src/main/java/com/devrel/android/fitactions', includes: '**/*.kt')
                }

                ant.replaceregexp(
                        match: 'apply plugin: \'com.google.gms.google-services\'',
                        replace: "// apply plugin: 'com.google.gms.google-services'",
                        flags: 'g',
                        byline: true
                ) {
                    fileset(dir: 'app', includes: 'build.gradle')
                }
            }
        } else {
            throw MissingFormatArgumentException("You must define a package name (ie. -PpackageName=\"com.my.sample\"")
        }
    }
}
